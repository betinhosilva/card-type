{
  "version": 3,
  "sources": [
    "../node_modules/browser-pack/_prelude.js",
    "../src/cardType.js",
    "../src/cards.js",
    "../src/index.js"
  ],
  "names": [],
  "mappings": "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",
  "file": "generated.js",
  "sourceRoot": "",
  "sourcesContent": [
    "(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})",
    "import cards from './cards'\n\nexport default function cardType (card) {\n  const bin = parseInt(\n    card.toString().replace(/\\D/g, '').substr(0, 6)\n  )\n  const detectedTypes = []\n\n  Object.keys(cards).forEach(type => {\n    const patterns = cards[type]\n    patterns.forEach(pattern => {\n      if (checkCard(bin, pattern)) {\n        detectedTypes.unshift(type)\n      }\n    })\n  })\n\n  return detectedTypes[0] || ''\n}\n\nfunction checkCard (bin, pattern) {\n  return Array.isArray(pattern)\n    ? checkRange(bin, pattern)\n    : checkPattern(bin, pattern)\n}\n\nfunction checkPattern (bin, pattern) {\n  bin = bin.toString()\n\n  if (pattern instanceof RegExp) {\n    return pattern.test(bin)\n  }\n\n  pattern = pattern.toString()\n  return bin.substr(0, pattern.length) === pattern\n}\n\nfunction checkRange (bin, [min, max]) {\n  bin = bin.toString()\n  min = parseInt(min)\n  max = parseInt(max)\n\n  const length = min.toString().length\n  const value = parseInt(bin.substr(0, length))\n\n  return value >= min && value <= max\n}\n",
    "export default {\n  visa: [\n    4\n  ],\n  mastercard: [\n    [50, 55],\n    [2221, 2720]\n  ],\n  amex: [\n    34,\n    37\n  ],\n  diners: [\n    36,\n    309,\n    [300, 305],\n    [38, 39]\n  ],\n  discover: [\n    6011,\n    [622126, 622925],\n    [644, 649],\n    65\n  ],\n  jcb: [\n    35\n  ],\n  elo: [\n    401178,\n    401179,\n    431274,\n    438935,\n    451416,\n    457393,\n    457631,\n    457632,\n    504175,\n    627780,\n    636297,\n    636297,\n    636368,\n    [506699, 506778],\n    [509000, 509999],\n    [650031, 650033],\n    [650035, 650051],\n    [650405, 650439],\n    [650485, 650538],\n    [650541, 650598],\n    [650700, 650718],\n    [650720, 650727],\n    [650901, 650920],\n    [651652, 651679],\n    [655000, 655019],\n    [655021, 655058],\n    [650921, 650978]\n  ],\n  hipercard: [\n    384100,\n    384140,\n    384160,\n    /^60(?!11)/,\n  ]\n}\n",
    "export { default as cards } from './cards'\nexport { default as cardType } from './cardType'\n"
  ]
}